import os
import sys

def clean_name(name, words_to_remove):
    """Удаляет указанные слова из имени, сохраняя все другие символы."""
    for word in words_to_remove:
        name = name.replace(word, "")
    return " ".join(name.split())

def preview_renaming(root_path, words_to_remove):
    """Создает список изменений для предпросмотра."""
    changes = []
    for dirpath, dirnames, filenames in os.walk(root_path, topdown=False):
        for dirname in dirnames:
            old_path = os.path.join(dirpath, dirname)
            new_name = clean_name(dirname, words_to_remove)
            new_path = os.path.join(dirpath, new_name)
            if old_path != new_path:
                changes.append((old_path, new_path))
        for filename in filenames:
            old_path = os.path.join(dirpath, filename)
            new_name = clean_name(filename, words_to_remove)
            new_path = os.path.join(dirpath, new_name)
            if old_path != new_path:
                changes.append((old_path, new_path))
    return changes

def rename_files_and_folders(changes):
    """Переименовывает файлы и папки согласно списку изменений."""
    for old_path, new_path in changes:
        try:
            os.rename(old_path, new_path)
            print(f"Renamed: {old_path} -> {new_path}")
        except Exception as e:
            print(f"Error renaming {old_path}: {e}")

if __name__ == "__main__":
    root = input("Enter folder path: ").strip()
    if not os.path.exists(root):
        print("The specified path does not exist.")
        sys.exit()

    words = input("Enter words to remove (comma separated): ").split(",")
    words = [word.strip() for word in words if word.strip()]

    changes = preview_renaming(root, words)

    if not changes:
        print("No files or folders need renaming.")
        sys.exit()

    print("\nPreview of changes:")
    for old_path, new_path in changes:
        print(f"{old_path} -> {new_path}")

    confirm = input("\nDo you want to proceed with renaming? (y/n): ").lower()
    if confirm == 'y':
        rename_files_and_folders(changes)
        print("\nRenaming completed.")
    else:
        print("\nRenaming canceled.")
